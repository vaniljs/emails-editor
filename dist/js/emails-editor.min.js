"use strict";

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

function EmailsEditor(_ref) {
  var id = _ref.idElement,
      mailCounter = _ref.mailCounter,
      btnDeleteInvalid = _ref.btnDeleteInvalid,
      setEmail = _ref.setEmail;

  if (document.getElementById(id)) {
    // email list generate from array
    var generateEmailList = function generateEmailList() {
      emailListUl.innerHTML = "";
      emailArray.map(function (item) {
        var li = document.createElement("li");

        if (/^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/.test(item)) {
          li.innerHTML = "<span class='email__emailseditor'>" + item.toString() + "</span><span class='delete_emailseditor'/>";
        } else {
          li.innerHTML = "<span class='email__emailseditor error'>" + item.toString() + "</span><span class='delete_emailseditor'/>";
        }

        emailListUl.append(li);
      });
    }; // delete email on click at button


    // add email to array
    var pushArrayEmail = function pushArrayEmail() {
      inputEmail.innerText.replace(/\r?\n?\s/g, "").split(",").map(function (item) {
        if (!emailArray.includes(item) && item && item !== placeholder.replace(/\r?\n?\s/g, "")) {
          emailArray.push(item);
          inputEmail.innerHTML = "";
          generateEmailList();
        } else {
          inputEmail.innerHTML = "";
        }
      });
      mailCounter ? mailCount() : false;
    }; // footer


    var addEmailRandom = function addEmailRandom() {
      var login = "",
          strong = 5,
          dic = "abcdefghijklmnopqrstuvwxyz1234567890",
          randomDomain = Math.floor(Math.random() * domains.length);

      for (var i = 0; i < strong; i++) {
        login += dic.charAt(Math.floor(Math.random() * dic.length));
      }

      emailArray.push(login + "@" + domains[randomDomain]);
      generateEmailList();
    }; // button Get Emails Count


    var mailCountCreate = function mailCountCreate() {
      if (mailCounter) {
        editorWrapper.before(inputCounter);
      }
    };

    var mailCount = function mailCount() {
      if (mailCounter) {
        inputCounter.innerText = emailArray.length;
      }
    }; // Option: button for delete all invalid email


    // Set a list of emails
    var setList = function setList() {
      if (setEmail) {
        for (var i = 0; i < setEmail; i++) {
          addEmailRandom();
        }
      }
    }; // Listener: delete


    var listenDeleteEmail = function listenDeleteEmail(e) {
      console.log("LISTENER. Deleted: " + e);
    }; // Listener: actual emails


    var haveEmails = function haveEmails(e) {
      console.log("LISTENER. Have emails: ");
      console.log(e);
    }; // Events onload page


    var emailArray = [],
        placeholder = "add more people...",
        domains = ["yandex.ru", "gmail.com", "mail.ru", "miro.com"]; // main wrapper

    var wrapperEmailsEditor = document.createElement("div");
    wrapperEmailsEditor.className = "wrapper_emailseditor"; // head wrapper

    var headWrapper = document.createElement("div");
    headWrapper.className = "headwrapper_emailseditor"; // head

    var headEmailsEditor = document.createElement("p");
    headEmailsEditor.className = "head_emailseditor";
    headEmailsEditor.innerHTML = "Share <b>Board name</b> with others";
    headWrapper.append(headEmailsEditor); // editor wrapper

    var editorWrapper = document.createElement("div");
    editorWrapper.className = "editorwrapper_emailseditor";
    headWrapper.append(editorWrapper); // focus on the first click on empty editor wrapper

    editorWrapper.addEventListener("click", function () {
      if (inputEmail.querySelector('span') && inputEmail.querySelector('span').innerHTML === placeholder) {
        inputEmail.innerHTML = "";
        inputEmail.focus();
      }
    }); // focus on the switch tab browser. otherwise placeholder is sent to the email list

    window.addEventListener("visibilitychange", function () {
      inputEmail.blur();
    }); // insert ul

    var emailListUl = document.createElement("ul");
    editorWrapper.append(emailListUl);
    document.getElementById(id).addEventListener("click", function (el) {
      if (el.target.classList.contains('delete_emailseditor')) {
        listenDeleteEmail(el.target.parentNode.querySelector('.email__emailseditor').innerHTML);
        el.target.parentNode.remove();
        emailArray = _toConsumableArray(document.getElementById(id).querySelectorAll('li'));
        mailCounter ? mailCount() : false;
        haveEmails(emailArray);
      }
    }); // create input for write emails

    var inputEmail = document.createElement("div");
    inputEmail.className = "inputemail_emailseditor";
    inputEmail.innerHTML = " ";
    inputEmail.setAttribute("contenteditable", true);
    editorWrapper.append(inputEmail); // insert placeholder in input

    var inputEmailPlaceholder = "<span class='inputemailplaceholder_emailseditor'>" + placeholder + "</span>";
    inputEmail.innerHTML = inputEmailPlaceholder;
    inputEmail.addEventListener('click', function () {
      if (inputEmail.querySelector('span') && inputEmail.querySelector('span').innerHTML === placeholder) {
        inputEmail.innerHTML = "";
      }
    });
    inputEmail.addEventListener('blur', function () {
      if (inputEmail.querySelector('span') == null && !inputEmail.innerHTML) {
        inputEmail.innerHTML = inputEmailPlaceholder;
      } else {
        pushArrayEmail();
        inputEmail.innerHTML = inputEmailPlaceholder;
      }
    }); // input event

    inputEmail.addEventListener("input", function () {
      if (inputEmail.innerHTML.indexOf(",") > -1) {
        pushArrayEmail();
      }
    }); // event for keydown "Enter"

    inputEmail.addEventListener('keydown', function (event) {
      var keyNum;

      if (window.event) {
        keyNum = window.event.keyCode;
      } else if (e) {
        keyNum = e.which;
      }

      if (keyNum === 13) {
        event.preventDefault();
        pushArrayEmail();
      }
    });
    var footerWrapper = document.createElement("div");
    footerWrapper.className = "footer_emailseditor"; // button Add Email

    var addEmail = document.createElement("button");
    addEmail.className = "addemail_emailseditor";
    addEmail.innerHTML = "Add email";
    addEmail.addEventListener('click', addEmailRandom);
    var getEmailCount = document.createElement("button");
    getEmailCount.className = "getemailscount__emailseditor";
    getEmailCount.innerHTML = "Get emails count";
    getEmailCount.addEventListener("click", function () {
      var quantityValidEmail = 0;
      emailArray.map(function (item) {
        if (/^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/.test(item)) {
          quantityValidEmail += 1;
        }
      });
      quantityValidEmail > 0 ? alert("Valid Email: " + quantityValidEmail) : alert("Not valid Email");
    }); // footer append

    footerWrapper.append(addEmail, getEmailCount); // main append

    wrapperEmailsEditor.append(headWrapper, footerWrapper);
    document.getElementById(id).append(wrapperEmailsEditor); // Option: input counter

    var inputCounter = document.createElement("p");
    inputCounter.className = "inputcounter_emailseditor";
    inputCounter.innerText = emailArray.length;

    if (btnDeleteInvalid) {
      var btnDel = document.createElement('button');
      btnDel.className = "btndel_emailseditor";
      btnDel.innerHTML = "Delete all invalid emails";
      footerWrapper.append(btnDel);
      btnDel.addEventListener('click', function () {
        var validEmailArray = emailArray.filter(function (item) {
          return /^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/.test(item);
        });
        emailArray = validEmailArray;
        generateEmailList();
      });
    }

    window.addEventListener("load", function () {
      generateEmailList();
      mailCountCreate();
      setList();
    });
  }
}
/*
todo Адаптивность формы и блоков email
todo Документация 
 */